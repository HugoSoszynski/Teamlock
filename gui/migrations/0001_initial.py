# Generated by Django 2.2.5 on 2019-09-15 09:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djongo.models.fields
import djongo.models.json
import teamlock_toolkit.managers.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='TeamlockUser',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.TextField()),
                ('last_name', models.TextField()),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('last_change_passwd', models.DateField(null=True)),
                ('last_password', models.TextField(null=True)),
                ('private_key', models.TextField(null=True)),
                ('public_key', models.TextField(null=True)),
                ('recovery_passphrase', models.TextField(null=True)),
                ('configure', models.BooleanField(default=False)),
                ('company', models.TextField()),
                ('is_locked', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', teamlock_toolkit.managers.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GeneralSettings',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('company_name', models.TextField()),
                ('install_year', models.IntegerField(default=2019)),
            ],
        ),
        migrations.CreateModel(
            name='MailSettings',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('host', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='SecuritySettings',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('password_change', models.IntegerField(default=100)),
                ('length_password', models.IntegerField(default=8)),
                ('key_size', models.IntegerField(default=4096)),
            ],
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('sym_key', models.TextField()),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_change', models.DateTimeField(default=django.utils.timezone.now)),
                ('folders', models.TextField()),
                ('keys', djongo.models.json.JSONField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('name', 'owner')},
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Shared',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('sym_key', models.TextField()),
                ('right', models.IntegerField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gui.Workspace')),
            ],
            options={
                'unique_together': {('workspace', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Mobile',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('type_mobile', models.TextField()),
                ('key', models.TextField()),
                ('activated', models.BooleanField(default=False)),
                ('join', models.DateField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('name', 'user')},
            },
        ),
    ]
